<?php

// database/factories/MedicalHistoryFactory.php
namespace Database\Factories;

use App\Models\Patient;
use Illuminate\Database\Eloquent\Factories\Factory;

class MedicalHistoryFactory extends Factory
{
    public function definition(): array
    {
        $categories = [
            'allergy',
            'surgery',
            'chronic-illness',
            'hospitalization',
            'immunization',
            'family-history',
            'social-history',
            'other'
        ];

        $clinicalStatuses = [
            'active',
            'recurrence',
            'inactive',
            'remission',
            'resolved'
        ];

        $verificationStatuses = [
            'unconfirmed',
            'provisional',
            'differential',
            'confirmed',
            'refuted',
            'entered-in-error'
        ];

        $category = $this->faker->randomElement($categories);
        $title = $this->generateTitleForCategory($category);

        $patient = Patient::inRandomOrder()->limit(1)->first();

        return [
            'fhir_id' => 'medicalhistory-' . $this->faker->uuid,
            'patient_id' => $patient->id,
            'category' => $category,
            'title' => $title,
            'description' => $this->generateDescriptionForCategory($category),
            'recorded_date' => $this->faker->dateTimeBetween('-5 years', 'now')->format('Y-m-d'),
            'occurrence_date' => $this->faker->dateTimeBetween('-10 years', 'now')->format('Y-m-d'),
            'clinical_status' => $this->faker->randomElement($clinicalStatuses),
            'verification_status' => $this->faker->randomElement($verificationStatuses),
            //'extension' => $this->generateFhirExtensions($category)
        ];
    }

    protected function generateTitleForCategory(string $category): string
    {
        $titles = [
            'allergy' => 'Alergia a ' . $this->faker->randomElement(['penicilina', 'mariscos', 'maní', 'látex', 'aspirina']),
            'surgery' => $this->faker->randomElement(['Apéndicectomía', 'Cirugía de rodilla', 'Cesárea', 'Colecistectomía']),
            'chronic-illness' => $this->faker->randomElement(['Diabetes tipo 2', 'Hipertensión arterial', 'Artritis reumatoide']),
            'hospitalization' => 'Hospitalización por ' . $this->faker->randomElement(['neumonía', 'fractura de cadera', 'apendicitis']),
            'immunization' => 'Vacuna contra ' . $this->faker->randomElement(['influenza', 'hepatitis B', 'tétanos']),
            'family-history' => 'Antecedente familiar de ' . $this->faker->randomElement(['cáncer de mama', 'enfermedad cardiaca', 'diabetes']),
            'social-history' => $this->faker->randomElement(['Tabaquismo', 'Consumo de alcohol', 'Exposición a asbestos']),
            'other' => $this->faker->sentence(3)
        ];

        return $titles[$category];
    }

    protected function generateDescriptionForCategory(string $category): string
    {
        $descriptions = [
            'allergy' => 'Reacción: ' . $this->faker->randomElement(['urticaria', 'anafilaxia', 'rash cutáneo']),
            'surgery' => 'Realizado en ' . $this->faker->company . '. ' . $this->faker->sentence(8),
            'chronic-illness' => 'Diagnosticado en ' . $this->faker->year . '. ' . $this->faker->sentence(10),
            'hospitalization' => 'Duración: ' . $this->faker->numberBetween(1, 30) . ' días. ' . $this->faker->sentence(6),
            'immunization' => 'Lote: ' . $this->faker->bothify('??###') . '. ' . $this->faker->sentence(5),
            'family-history' => 'Parentesco: ' . $this->faker->randomElement(['padre', 'madre', 'hermano/a', 'abuelo/a']),
            'social-history' => 'Duración: ' . $this->faker->numberBetween(1, 30) . ' años. ' . $this->faker->sentence(8),
            'other' => $this->faker->paragraph(2)
        ];

        return $descriptions[$category];
    }

    protected function generateFhirExtensions(string $category): array
    {
        $baseExtension = [
            'url' => 'http://example.com/fhir/extensions/medical-history',
            'valueString' => 'Generated by factory'
        ];

        $categorySpecific = [
            'allergy' => [
                'severity' => $this->faker->randomElement(['mild', 'moderate', 'severe']),
                'manifestation' => $this->faker->randomElement(['rash', 'anaphylaxis', 'respiratory distress'])
            ],
            'surgery' => [
                'procedureCode' => $this->faker->numerify('####'),
                'outcome' => $this->faker->randomElement(['successful', 'complications', 'partial-success'])
            ],
            'chronic-illness' => [
                'onsetAge' => $this->faker->numberBetween(10, 80),
                'management' => $this->faker->sentence(5)
            ]
        ];

        return array_merge($baseExtension, $categorySpecific[$category] ?? []);
    }
}
